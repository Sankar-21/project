{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// TaskList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  projectId\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/tasks?project_id=${projectId}`);\n      setTasks(res.data);\n    } catch (err) {\n      console.error('Failed to fetch tasks:', err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [projectId]);\n  if (tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500\",\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"divide-y mt-4\",\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"py-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", task.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Start: \", new Date(task.planned_start).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"End: \", new Date(task.planned_end).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, task._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TaskList","projectId","_s","tasks","setTasks","fetchTasks","res","get","data","err","console","error","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","name","status","Date","planned_start","toLocaleDateString","planned_end","_id","_c","$RefreshReg$"],"sources":["C:/project/frontend/src/components/Dashboard.js"],"sourcesContent":["// TaskList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskList = ({ projectId }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/tasks?project_id=${projectId}`);\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch tasks:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [projectId]);\r\n\r\n  if (tasks.length === 0) {\r\n    return <p className=\"text-sm text-gray-500\">No tasks available.</p>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"divide-y mt-4\">\r\n      {tasks.map(task => (\r\n        <li key={task._id} className=\"py-2\">\r\n          <h3 className=\"font-semibold\">{task.name}</h3>\r\n          <p>Status: {task.status}</p>\r\n          <p>Start: {new Date(task.planned_start).toLocaleDateString()}</p>\r\n          <p>End: {new Date(task.planned_end).toLocaleDateString()}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,8CAA8CN,SAAS,EAAE,CAAC;MACtFG,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,IAAIE,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;IACtB,oBAAOb,OAAA;MAAGc,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrE;EAEA,oBACEnB,OAAA;IAAIc,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC1BX,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACbrB,OAAA;MAAmBc,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjCf,OAAA;QAAIc,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEM,IAAI,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CnB,OAAA;QAAAe,QAAA,GAAG,UAAQ,EAACM,IAAI,CAACE,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BnB,OAAA;QAAAe,QAAA,GAAG,SAAO,EAAC,IAAIS,IAAI,CAACH,IAAI,CAACI,aAAa,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjEnB,OAAA;QAAAe,QAAA,GAAG,OAAK,EAAC,IAAIS,IAAI,CAACH,IAAI,CAACM,WAAW,CAAC,CAACD,kBAAkB,CAAC,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJtDE,IAAI,CAACO,GAAG;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAAChB,EAAA,CAhCIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}