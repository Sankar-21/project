{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProjectForm from './ProjectForm';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const fetchProjects = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/projects');\n      setProjects(res.data);\n    } catch (err) {\n      console.error('Failed to fetch projects:', err);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dark bg-background text-white min-h-screen p-6 grid grid-cols-1 md:grid-cols-3 gap-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-1 bg-surface p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-primary mb-4\",\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n        onProjectAdded: fetchProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-2 space-y-6\",\n      children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400\",\n        children: \"No projects found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-lg p-5 shadow-md border-l-4 ${index % 3 === 0 ? 'border-primary bg-surface' : index % 3 === 1 ? 'border-success bg-surface' : 'border-warning bg-surface'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-1\",\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-300 mb-2\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-400\",\n          children: [\"Start: \", new Date(project.start_date).toLocaleDateString(), \" \\xA0 End: \", new Date(project.end_date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n            projectId: project._id,\n            onTaskAdded: fetchProjects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n            projectId: project._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","ProjectForm","TaskForm","TaskList","jsxDEV","_jsxDEV","Dashboard","_s","projects","setProjects","fetchProjects","res","get","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onProjectAdded","length","map","project","index","name","description","Date","start_date","toLocaleDateString","end_date","projectId","_id","onTaskAdded","_c","$RefreshReg$"],"sources":["C:/project/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectForm from './ProjectForm';\r\nimport TaskForm from './TaskForm';\r\nimport TaskList from './TaskList';\r\n\r\nconst Dashboard = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/projects');\r\n      setProjects(res.data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch projects:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dark bg-background text-white min-h-screen p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n      {/* Left - Project Form */}\r\n      <div className=\"col-span-1 bg-surface p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-bold text-primary mb-4\">Create Project</h2>\r\n        <ProjectForm onProjectAdded={fetchProjects} />\r\n      </div>\r\n\r\n      {/* Right - Projects & Tasks */}\r\n      <div className=\"col-span-2 space-y-6\">\r\n        {projects.length === 0 ? (\r\n          <div className=\"text-gray-400\">No projects found.</div>\r\n        ) : (\r\n          projects.map((project, index) => (\r\n            <div\r\n              key={project._id}\r\n              className={`rounded-lg p-5 shadow-md border-l-4 ${\r\n                index % 3 === 0\r\n                  ? 'border-primary bg-surface'\r\n                  : index % 3 === 1\r\n                  ? 'border-success bg-surface'\r\n                  : 'border-warning bg-surface'\r\n              }`}\r\n            >\r\n              <h3 className=\"text-xl font-semibold mb-1\">{project.name}</h3>\r\n              <p className=\"text-sm text-gray-300 mb-2\">{project.description}</p>\r\n              <p className=\"text-xs text-gray-400\">\r\n                Start: {new Date(project.start_date).toLocaleDateString()} &nbsp;\r\n                End: {new Date(project.end_date).toLocaleDateString()}\r\n              </p>\r\n\r\n              <div className=\"mt-4\">\r\n                <TaskForm projectId={project._id} onTaskAdded={fetchProjects} />\r\n                <TaskList projectId={project._id} />\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,oCAAoC,CAAC;MACjEH,WAAW,CAACE,GAAG,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;IACjD;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,sFAAsF;IAAAC,QAAA,gBAEnGb,OAAA;MAAKY,SAAS,EAAC,gDAAgD;MAAAC,QAAA,gBAC7Db,OAAA;QAAIY,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxEjB,OAAA,CAACJ,WAAW;QAACsB,cAAc,EAAEb;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAGNjB,OAAA;MAAKY,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAClCV,QAAQ,CAACgB,MAAM,KAAK,CAAC,gBACpBnB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAEvDd,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1BtB,OAAA;QAEEY,SAAS,EAAE,uCACTU,KAAK,GAAG,CAAC,KAAK,CAAC,GACX,2BAA2B,GAC3BA,KAAK,GAAG,CAAC,KAAK,CAAC,GACf,2BAA2B,GAC3B,2BAA2B,EAC9B;QAAAT,QAAA,gBAEHb,OAAA;UAAIY,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAEQ,OAAO,CAACE;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9DjB,OAAA;UAAGY,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAEQ,OAAO,CAACG;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnEjB,OAAA;UAAGY,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GAAC,SAC5B,EAAC,IAAIY,IAAI,CAACJ,OAAO,CAACK,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAC,aACrD,EAAC,IAAIF,IAAI,CAACJ,OAAO,CAACO,QAAQ,CAAC,CAACD,kBAAkB,CAAC,CAAC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eAEJjB,OAAA;UAAKY,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBb,OAAA,CAACH,QAAQ;YAACgC,SAAS,EAAER,OAAO,CAACS,GAAI;YAACC,WAAW,EAAE1B;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChEjB,OAAA,CAACF,QAAQ;YAAC+B,SAAS,EAAER,OAAO,CAACS;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA,GAnBDI,OAAO,CAACS,GAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBb,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAzDID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}